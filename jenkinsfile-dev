pipeline {
     agent any 
     environment {
	 IMAGE_NAME = "connectwise-rmm-agent"
	 IMAGE_TAG = "${BUILD_NUMBER}"
	 DOCKER_REPO = "ambarbhore1234"
	 K8S_DEPLOYMENT = "k8s"
	 KUBECONFIG = credentials('k8s-jenkins-kubeconfig')
     }
     stages {
	stage('checkout code') {
	    steps {
		echo 'checking out the source code'
		checkout scm
	    }
	}
	stage('Build with Maven') {
	    steps {
		echo 'Building JAR with Maven .........'
		sh 'mvn clean package'
	    }
	}
	stage('Build docker Image') {
	    steps {
		echo "Building docker image ${DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}"
		sh 'docker build -t ${DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG} .'
	    }
	}
	stage('Push Image to docker hub') {
	    steps {
		echo "Pushing docker image to the docker hub"
		withCredentials([usernamePassword(credentialsId: 'dockerhub-cred', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
		    sh """
		    echo "$PASS" | docker login -u "$USER" --password-stdin
		    docker push ${DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}
		    """
		}
	    }
	}
	stage('Deploy to kubernetes') {
	    steps {
		echo "deploying the latest docker image to the k8s: "
		sh """
		     kubectl apply -n dev -f ${K8S_DEPLOYMENT}/deployment.yaml
		     kubectl apply -n dev -f ${k8S_DEPLOYMENT}/service.yaml
		     
		     kubectl set image deployment/rmm-agent rmm-agent={DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG} -n dev
		     
		     # show rollout history and rollout status
		     kubectl rollout status deployment/rmm-agent -n dev
		     kubectl rollout history deployment/rmm-agent -n dev
		"""
	    }
        }
    }
}
